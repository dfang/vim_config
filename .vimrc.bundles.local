Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'

Bundle 'ervandew/supertab'

Bundle 'Shougo/neocomplcache'
Bundle 'matchit.zip'
Bundle 'surround.vim'
Bundle 'EasyMotion'
Bundle 'repeat.vim'


"Bundle 'tpope/vim-fugitive'

"------------------------------------------
" Ruby
"------------------------------------------
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-rails'
Bundle 'ecomba/vim-ruby-refactoring'
"Bundle 'nelstrom/vim-textobj-rubyblock'
"Bundle 'tpope/vim-haml'


"------------------------------------------
" HTML
"------------------------------------------
"Bundle 'AutoClose'
"Bundle 'HTML-AutoCloseTag'
"Bundle 'mattn/zencoding-vim'
Bundle 'dfang/sparkup'

"------------------------------------------
"snipmates and its dependencies
"------------------------------------------
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
"Bundle 'scrooloose/snipmate-snippets'
"forked from honza/snipmate-snippets
Bundle 'dfang/snipmate-snippets' 
Bundle 'garbas/vim-snipmate'

Bundle 'zaiste/tmux.vim'
Bundle 'vimux'

Bundle 'L9'
Bundle 'FuzzyFinder'

Bundle 'tpope/vim-rails'
"Bundle 'chilicuil/conque'
"Bundle 'huobazi/conque'

"------------------------------------------
"NERDTree
"------------------------------------------
map <F4> :NERDTreeToggle<CR>:NERDTreeMirror<CR>
set mouse=a
let NERDTreeMouseMode=3
let NERDTreeMinimalUI=1
let NERDTreeQuitOnOpen=0


"------------------------------------------
"FuzzyFinder
"------------------------------------------
map ,, :FufCoverageFile!<cr>
map <c-p> :NERDTreeClose<cr>:FufCoverageFile!<cr>
""nnoremap <unique> <silent> <leader>fb :FufBuffer!<CR>
""nnoremap <unique> <silent> <leader>ff :FufFile!<CR>
""nnoremap <unique> <silent> <leader>fm :FufMruFile!<CR>
""nnoremap <unique> <silent> <leader>fc :FufRenewCache<CR>
autocmd FileType fuf nmap <C-c> <ESC>
let g:fuf_patternSeparator = ' '
let g:fuf_modesDisable = ['mrucmd']
let g:fuf_mrufile_exclude = '\v\.DS_Store|\.git|\.swp|\.svn'
let g:fuf_mrufile_maxItem = 100
let g:fuf_enumeratingLimit = 2000
let g:fuf_file_exclude = '\v\.DS_Store|\.git*|\.swp|\.svn'
let g:fuf_coveragefile_exclude='\v\~$|\.(o|exe|dll|bak|orig|swp)$|(^|[/\\])\.(hg|git|bzr)($|[/\\])|\.git*'
let g:fuf_coveragefile_prompt='=>'
let g:fuf_dir_exclude = '\v(^|[/\\])\.(hg|git|bzr)($|[/\\])'                                                                                          






if &term =~ '^screen'
    " tmux will send xterm-style keys when its xterm-keys option is on
    execute "set <xUp>=\e[1;*A"
    execute "set <xDown>=\e[1;*B"
    execute "set <xRight>=\e[1;*C"
    execute "set <xLeft>=\e[1;*D"
endif

Bundle 'tsaleh/vim-align'
Bundle 'tpope/vim-endwise'
Bundle 'tpope/vim-repeat'
Bundle 'tpope/vim-surround'



Bundle 'Lokaltog/vim-powerline'

"-------------- color -------------------

"Bundle 'tomasr/molokai'
"Bundle 'altercation/vim-colors-solarized'
"Bundle 'blackboard.vim'
